name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/vitistack
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Configure Git for private repos
        run: |
          git config --global url.https://$GH_TOKEN@github.com/.insteadOf https://github.com/

      - name: Setup Go
        uses: actions/setup-go@v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Install dependencies
        run: |
          go mod download
        env:
          GOPRIVATE: github.com/vitistack/*
          GOPROXY: direct

      - name: Build
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v*}"
          echo "Version $VERSION"
          touch cmd/isbuilt
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GOPRIVATE: github.com/vitistack/*
          GOPROXY: direct

  create-oci-image:
    name: Create OCI Image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/vitistack/viti-proxmox-operator
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-chart-package:
    name: Create and Push Helm Chart
    needs: create-oci-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.1
        with:
          version: "latest"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: extract-version
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v*}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update chart version, appVersion and values
        run: |
          VERSION="$VERSION"

          cat << EOF > .github/yq-script.yaml
          - command: update
            path: version
            value: "${VERSION}"
          - command: update
            path: appVersion
            value: "${VERSION}"
          EOF

          cat << EOF > .github/yq-values-script.yaml
          - command: update
            path: image.tag
            value: "${VERSION}"
          EOF

          npx -y yq-cli write --file=.github/yq-script.yaml charts/proxmox-operator/Chart.yaml
          npx -y yq-cli write --file=.github/yq-values-script.yaml charts/proxmox-operator/values.yaml

      - name: Package Helm chart
        run: |
          helm package charts/proxmox-operator

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Helm chart to OCI registry
        run: |
          helm push proxmox-operator-${VERSION}.tgz oci://ghcr.io/vitistack/helm

  # Helm chart packaging was removed because this repository does not include a charts/ directory.
